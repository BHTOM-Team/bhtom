# Generated by Django 2.2.8 on 2021-09-23 14:00

import bhtom.models
import datetime
from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('tom_dataproducts', '0008_auto_20191205_1952'),
    ]

    operations = [
        migrations.CreateModel(
            name='ViewReducedDatum',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('data_type', models.CharField(default='', max_length=100)),
                ('source_name', models.CharField(default='', max_length=100)),
                ('timestamp', models.DateTimeField(db_index=True, default=datetime.datetime.now)),
                ('value', models.TextField()),
                ('rd_extra_data', models.TextField(blank=True, null=True)),
                ('dp_extra_data', models.TextField(blank=True, null=True)),
                ('observation_record_facility', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Catalogs',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField(editable=False)),
                ('filters', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=10), size=None)),
            ],
        ),
        migrations.CreateModel(
            name='ReducedDatumExtraData',
            fields=[
                ('reduced_datum', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='tom_dataproducts.ReducedDatum')),
                ('extra_data', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Observatory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('obsName', models.CharField(max_length=255, unique=True, verbose_name='Observatory name')),
                ('lon', models.FloatField(verbose_name='Longitude')),
                ('lat', models.FloatField(verbose_name='Latitude')),
                ('prefix', models.CharField(blank=True, max_length=255, null=True)),
                ('cpcsOnly', models.BooleanField(default='False', verbose_name='Only instrumental photometry file')),
                ('obsInfo', models.FileField(upload_to='ObsInfo', verbose_name='Obs Info')),
                ('fits', models.FileField(upload_to='user_fits', verbose_name='Sample fits')),
                ('matchDist', models.CharField(choices=[('1', '1 arcsec'), ('2', '2 arcsec'), ('4', '4 arcsec'), ('6', '6 arcsec')], default='1', max_length=10, verbose_name='Matching radius')),
                ('comment', models.TextField(blank=True, null=True)),
                ('isVerified', models.BooleanField(default='False')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Obs info',
            },
        ),
        migrations.CreateModel(
            name='Instrument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hashtag', models.CharField(max_length=255)),
                ('isActive', models.BooleanField(default='True')),
                ('comment', models.TextField(blank=True, null=True)),
                ('observatory_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bhtom.Observatory')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BHTomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_activate', models.BooleanField(default='False')),
                ('latex_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='LaTeX name')),
                ('latex_affiliation', models.CharField(blank=True, max_length=255, null=True, verbose_name='LaTeX affiliation')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address')),
                ('about_me', models.TextField(blank=True, null=True, verbose_name='About me')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BHTomFits',
            fields=[
                ('file_id', models.AutoField(db_index=True, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('C', 'Created'), ('S', 'Sent to photometry'), ('I', 'Photometry in progress'), ('R', 'Photometry result'), ('F', 'Finished'), ('E', 'Error'), ('U', 'User not active')], default='C', max_length=1)),
                ('status_message', models.TextField(blank=True, default='Fits upload', editable=False)),
                ('mjd', models.FloatField(blank=True, null=True)),
                ('expTime', models.FloatField(blank=True, null=True)),
                ('photometry_file', models.FileField(blank=True, null=True, upload_to=bhtom.models.photometry_name)),
                ('cpcs_plot', models.TextField(blank=True, null=True)),
                ('mag', models.FloatField(blank=True, null=True)),
                ('mag_err', models.FloatField(blank=True, null=True)),
                ('ra', models.FloatField(blank=True, null=True)),
                ('dec', models.FloatField(blank=True, null=True)),
                ('zeropoint', models.FloatField(blank=True, null=True)),
                ('outlier_fraction', models.FloatField(blank=True, null=True)),
                ('scatter', models.FloatField(blank=True, null=True)),
                ('npoints', models.IntegerField(blank=True, null=True)),
                ('ccdphot_filter', models.CharField(blank=True, max_length=255, null=True)),
                ('cpcs_time', models.DateTimeField(blank=True, editable=False, null=True)),
                ('start_time', models.DateTimeField(blank=True, editable=False, null=True)),
                ('filter', models.CharField(blank=True, max_length=255, null=True)),
                ('matchDist', models.CharField(choices=[('1', '1 arcsec'), ('2', '2 arcsec'), ('4', '4 arcsec'), ('6', '6 arcsec')], default='2 arcsec', max_length=10, verbose_name='Matching radius')),
                ('allow_upload', models.BooleanField(verbose_name='Dry Run (no data will be stored in the database)')),
                ('followupId', models.IntegerField(blank=True, null=True)),
                ('data_stored', models.BooleanField(default='False')),
                ('survey', models.CharField(blank=True, max_length=255, null=True)),
                ('cpsc_filter', models.CharField(blank=True, max_length=10, null=True)),
                ('priority', models.IntegerField(blank=True, editable=False, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('dataproduct_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tom_dataproducts.DataProduct')),
                ('instrument_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bhtom.Instrument')),
            ],
            options={
                'verbose_name_plural': 'BHTomFits',
            },
        ),
        migrations.CreateModel(
            name='BHTomData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_stored', models.BooleanField(default='False')),
                ('comment', models.TextField(blank=True, null=True)),
                ('dataproduct_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tom_dataproducts.DataProduct')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
